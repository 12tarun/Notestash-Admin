@model Notestash_Admin.Models.changePassword

@{
    ViewBag.Title = "changePassword";
    Layout = "";
}


@Styles.Render("~/Content/css")
@Scripts.Render("~/bundles/modernizr")

<body style="padding-top:0px;background:url('https://i.imgur.com/5wlO5NW.jpg'); background-repeat:no-repeat;background-size:cover;background-position:center center;">

    <div class="card border-secondary mb-3" style="width:50%;height:64%;opacity:0.95;box-shadow: 12px 12px 50px 7px #000000;background-color:white;position:relative;top:18%;left:25%">

        <nav class="navbar navbar-expand-lg navbar-dark bg-dark" style="min-height:40px;">
            <h3 class="navbar-brand" href="#" style="margin-left:33%">NOTESTASH  ADMIN  PANEL</h3>
        </nav>

        <div class="card-body">

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <div>

                            <div class="card text-white bg-dark mb-3" style="max-width: 20rem; float:right">
                                <div class="card-header">NOTESTASH</div>
                                <div class="card-body">
                                    <h5 class="card-title"></h5>
                                    <p class="card-text">
                                        Notestash is an easy to use android application which can create notes
                                        just by scanning and selecting a handwritten or printed text, converting
                                        them in a font of user’s choice and saving them. It will thus create notes
                                        smartly thereby saving time and paper.
                                    </p>
                                </div>
                            </div>
                            <br />
                            <div class="form-group">
                                @Html.LabelFor(model => model.newPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.newPassword, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.newPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="min-width:900px">
                                @Html.LabelFor(model => model.confirmNewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.confirmNewPassword, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.confirmNewPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Change" class="btn btn-default" />
                                </div>
                            </div>
                            <br />
                            <div>
                                @Html.ActionLink("Go to Login?", "signIn")
                            </div>
                            @Html.ValidationMessage("Changed", new { @class = "text-success" })
                            @Html.ValidationMessage("BadRequest", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</body>












@*<h2>changePassword</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>changePassword</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
